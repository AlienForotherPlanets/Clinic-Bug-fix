{
    "version": 3,
    "file": "static/js/768.1c2564c6.chunk.js",
    "mappings": "sTASA,MAAMA,EAAY,CACd,CAAEC,GAAI,cAAeC,MAAO,OAAQC,SAAU,KAC9C,CAAEF,GAAI,gBAAiBC,MAAO,aAAcC,SAAU,KACtD,CAAEF,GAAI,SAAUC,MAAO,UAAWC,SAAU,KAC5C,CAAEF,GAAI,SAAUC,MAAO,SAAUC,SAAU,IAC3C,CAAEF,GAAI,SAAUC,MAAO,SAAUC,SAAU,KAC3C,CAAEF,GAAI,UAAWC,MAAO,UAAWC,SAAU,KAC7C,CAAEF,GAAI,QAASC,MAAO,QAASC,SAAU,KACzC,CAAEF,GAAI,cAAeC,MAAO,cAAeC,SAAU,IACrD,CAAEF,GAAI,MAAOC,MAAO,MAAOC,SAAU,IACrC,CAAEF,GAAI,MAAOC,MAAO,MAAOC,SAAU,KACrC,CAAEF,GAAI,SAAUC,MAAO,UAAWC,SAAU,KAC5C,CAAEF,GAAI,aAAcC,MAAO,cAAeC,SAAU,MAqBxD,MAAMC,EAAUC,EAAAA,YAAiB,CAACC,EAAOC,KAErC,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAEnC,MAAMC,GAAUC,EAAAA,EAAAA,OAmBhBC,EAAAA,EAAAA,YAAU,KATNC,MAAM,mDACDC,MAAKC,GACKA,EAASC,SAEnBF,MAAKG,IACFT,EAASS,QAMlB,IACH,MAAOC,EAASC,IAAcV,EAAAA,EAAAA,aAE9BG,EAAAA,EAAAA,YAAU,KACNO,EAAWZ,KACZ,CAACA,IACJ,MAAOa,EAAUC,IAAeZ,EAAAA,EAAAA,UAAS,CAAEa,GAAIC,GAAkBA,KAC1DC,EAAOC,IAAYhB,EAAAA,EAAAA,UAAS,GAC7BiB,EAAeC,IACjB,IAAIC,EAASD,EAAEC,OACfP,EAAY,CACRC,GAAIC,GACoB,IAAhBK,EAAOC,MACAN,EAGAA,EAAMO,QAAOC,IAAC,qCAAI,UAAAA,EAAEC,mBAAF,eAAeC,cAAcC,SAA7B,UAAsCN,EAAOC,aAA7C,aAAsC,EAAcI,kBAApD,UAClBF,EAAEI,qBADgB,aAClB,EAAiBC,WAAWF,SAASN,EAAOC,UAD1B,UAElBE,EAAEM,sBAFgB,aAElB,EAAkBD,WAAWF,SAASN,EAAOC,UAF3B,UAGlBE,EAAEO,WAHgB,aAGlB,EAAOF,WAAWF,SAASN,EAAOC,UAHhB,UAIlBE,EAAEQ,kBAJgB,aAIlB,EAAcH,WAAWF,SAAzB,UAAkCN,EAAOC,aAAzC,aAAkC,EAAcO,eAJ9B,UAKlBL,EAAES,cALgB,aAKlB,EAAUP,cAAcC,SAAxB,UAAiCN,EAAOC,aAAxC,aAAiC,EAAcI,kBAL7B,UAMlBF,EAAEU,cANgB,aAMlB,EAAUR,cAAcC,SAAxB,UAAiCN,EAAOC,aAAxC,aAAiC,EAAcI,kBAN7B,UAOlBF,EAAEW,kBAPgB,aAOlB,EAAcT,cAAcC,SAA5B,UAAqCN,EAAOC,aAA5C,aAAqC,EAAcI,uBAMnEU,EAAMC,IAAWnC,EAAAA,EAAAA,UAAS,IAC1BoC,EAAaC,IAAkBrC,EAAAA,EAAAA,UAAS,KACxCsC,EAAOC,IAAYvC,EAAAA,EAAAA,aACnBwC,EAASC,IAAczC,EAAAA,EAAAA,YAYxB0C,EAAmB,CAACC,EAAOC,KAC7BT,EAAQS,IAENC,EAA2BF,IAC7BN,GAAgBM,EAAMxB,OAAOC,OAC7Be,EAAQ,IAuBZ,SAASW,EAAqBC,EAAGC,EAAGR,GAEhC,OAAIQ,EAAER,GAAWO,EAAEP,IACP,EAERQ,EAAER,GAAWO,EAAEP,GACR,EAEJ,EAEX,MAAMS,EAA+B,KACjC,GAAInD,EACA,OAhCR,SAAoBoD,EAAOC,GACvB,MAAMC,EAAiBF,EAAMG,KAAI,CAACC,EAAIC,IAAU,CAACD,EAAIC,KAQrD,OAPAH,EAAeI,MAAK,CAACT,EAAGC,KACpB,MAAMV,EAAQa,EAAWJ,EAAE,GAAIC,EAAE,IAEjC,OAAc,IAAVV,EAAoBA,EACjBS,EAAE,GAAKC,EAAE,MAGbI,EAAeC,KAAKC,GAAOA,EAAG,KAuB1BG,CAAW9C,EAASE,GAAGf,GApBtC,SAAuBwC,EAAOE,GAE1B,MAAiB,SAAVF,EACD,CAACS,EAAGC,IAAMF,EAAqBC,EAAGC,EAAGR,GACrC,CAACO,EAAGC,KAAOF,EAAqBC,EAAGC,EAAGR,GAgBFkB,CAAcpB,EAAOE,IAAUmB,MAAMzB,EAAOE,GAAcF,EAAO,GAAKE,IAEpH,IAAIwB,GAAeC,EAAAA,EAAAA,UACnB,OAhIJ,SAAmBC,GACf,IAAIC,EAAOD,EAAQ,IACfE,EAAKC,SAASC,OAAOC,MAAM,KAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAGK,OAAQD,IAAK,CAChC,IAAIE,EAAIN,EAAGI,GACX,KAAsB,KAAfE,EAAEC,OAAO,IACZD,EAAIA,EAAEE,UAAU,GAEpB,GAAuB,GAAnBF,EAAEG,QAAQV,GACV,OAAOO,EAAEE,UAAUT,EAAKM,OAAQC,EAAED,QAG1C,MAAO,GAoHHK,CAAU,aAEN,8BACK5E,IAAS,UAAC,IAAD,CAAU6E,MAAM,eAAeC,WAAW,SAAC,IAAD,CAAeC,SAAU5D,IAAnE,WAEN,UAAC,IAAD,CAAO6D,GAAI,CAAEC,MAAO,QAApB,WAEI,SAAC,IAAD,CAAgBD,GAAI,CAAEE,UAAW,KAAjC,UACI,gBAAKnF,IAAKyD,GAAOM,EAAeN,EAAhC,UACI,UAAC,IAAD,CAAO2B,cAAY,EAAC,aAAW,eAAeH,GAAI,CAC9C,aAAc,CAAEI,gBAAiB,UAAWC,WAAY,OAAS,aAAc,CAC3EA,WAAY,OAEhB,mBAAoB,CAChBD,gBAAiB,UACjBE,OAAQ,YANhB,WASI,SAAC,IAAD,WACI,SAAC,IAAD,UAEQ9F,EAAU+D,KAAIgC,IACV,SAAC,IAAD,CAA6BC,cAAe9C,IAAY6C,EAAS9F,IAAK+C,EAAeiD,MAAM,SAASC,MAAO,CAAE/F,SAAU4F,EAAS5F,UAAhI,SACK4F,EAASI,eAAiBJ,EAAS7F,OAChC,SAAC,IAAD,CACIkG,OAAQlD,IAAY6C,EAAS9F,GAC7BoG,UAAWnD,IAAY6C,EAAS9F,GAAK+C,EAAQ,MAC7CsD,QAAS,KA5E3CC,QA4EqER,EAAS9F,GA1EpGgD,EADcC,IAAYqD,GAAoB,QAAVvD,EACnB,OAAS,OAE1BG,EAAWoD,IAqEyC,SAIKR,EAAS7F,MAAMsG,iBANZT,EAAS9F,WAazC,SAAC,IAAD,UAEQ0D,IAA+BI,KAAI0C,IAC/BC,QAAQC,IAAIF,IACZ,UAAC,IAAD,CAAUG,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,WAEI,SAAC,IAAD,CAAWb,MAAM,SAAjB,SAA2BQ,EAAKxE,eAChC,SAAC,IAAD,CAAWgE,MAAM,SAAjB,SAA2BQ,EAAKrE,iBAChC,SAAC,IAAD,CAAW6D,MAAM,SAAjB,SAA2BQ,EAAKhE,UAChC,SAAC,IAAD,CAAWwD,MAAM,SAAjB,SAA2BQ,EAAKM,UAChC,SAAC,IAAD,CAAWd,MAAM,SAAjB,UAA0B,SAAC,IAAD,CAAQK,QAAS,KAtJvF3F,EAAQ,iDAAkD,CACtDqG,MAqJiGP,KAA/B,gCAC1B,SAAC,IAAD,CAAWR,MAAM,SAAjB,UAA6BQ,EAAKQ,MAAaR,EAAKQ,MAAQ,IAAlB,KAA2BR,EAAKS,OAAcT,EAAKS,OAAS,IAAnB,KAA4BT,EAAKU,QAAeV,EAAKU,QAAU,IAApB,IAA2B,IAAMV,EAAKW,QACpK,SAAC,IAAD,CAAWnB,MAAM,SAAjB,SAA2BQ,EAAKY,SAChC,SAAC,IAAD,CAAWpB,MAAM,SAAjB,SAA2BQ,EAAKa,eAChC,SAAC,IAAD,CAAWrB,MAAM,SAAjB,SAA2BQ,EAAKc,OAChC,SAAC,IAAD,CAAWtB,MAAM,SAAjB,SAA2BQ,EAAKlE,OAChC,SAAC,IAAD,CAAW0D,MAAM,SAAjB,SAA2BQ,EAAK/D,UAChC,SAAC,IAAD,CAAWuD,MAAM,SAAjB,SAA2BQ,EAAK9D,eAbe8D,EAAKe,kBAuBhF,SAAC,IAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAOnH,EAAMuE,OACbjC,YAAaA,EACbF,KAAMA,EACNgF,aAAcxE,EACdyE,oBAAqBtE,QAI7B,SAAC,IAAD,CACIuE,QAAS,KACE,SAAC,IAAD,CAAQC,QAAQ,WAAhB,oBAEXC,QAAS,IAAM1D,EACf2D,cAAc,uBAStB,2CAKhB,a,0MCpOA,MAAMC,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAQ,CAAEC,kBAAF,MAAfF,EAAsC,QAAC,MAAEG,GAAH,QAAgB,CACtEC,OAAQ,KACR9C,MAAO,MACP+C,IAAK,mBACLC,QAAS,SACT,CAACH,EAAMI,YAAYC,KAAK,OAAQ,CAC5BF,QAAS,cAIXG,GAAoBT,EAAAA,EAAAA,IAAOU,EAAAA,EAAe,CAAER,kBAAF,MAAtBF,EAA6C,QAAC,MAAEG,GAAH,QAAgB,CACnF7C,MAAO,IACPqD,WAAY,GACZC,YAAa,GACbC,aAAc,GACd,UAAW,CACPC,WAAY,yBACZF,YAAa,kBAEjB,CAACT,EAAMI,YAAYC,KAAK,OAAQ,CAC5BlD,MAAO,KAEX,CAAC6C,EAAMI,YAAYC,KAAK,OAAQ,CAC5BlD,MAAO,OACPqD,WAAY,EACZG,WAAY,YAIdC,GAAoBf,EAAAA,EAAAA,IAAOgB,EAAAA,EAAQ,CAAEd,kBAAF,MAAfF,EAAsC,QAAC,MAAEG,GAAH,QAAgB,IACzEA,EAAMc,WAAWC,gBACjBf,EAAMc,WAAWE,aACpBL,WAAYX,EAAMiB,QAAQjE,UAAUkE,MACpCC,MAAOnB,EAAMiB,QAAQjE,UAAUoE,KAC/B,UAAW,CACPT,WAAYX,EAAMiB,QAAQjE,UAAUoE,KACpCD,MAAOnB,EAAMiB,QAAQjE,UAAUkE,WAMjCG,EAAe,IAAmD,IAAlD,MAAE7H,EAAF,SAAS8H,EAAT,WAAmBC,EAAnB,aAA8BlI,GAAmB,EACnE,MAAM2G,GAAQwB,EAAAA,EAAAA,KAEd,OACI,SAAClB,EAAD,CACI3I,GAAG,sBAEHsF,SAAU5D,EACVoI,YAAY,SACZC,gBACI,SAAC,IAAD,CAAgBC,SAAS,QAAzB,UACI,SAAC,MAAD,CAAYC,OAAQ,IAAKC,KAAK,OAAOV,MAAOnB,EAAMiB,QAAQa,KAAK,SAGvEC,cACI,SAAC,IAAD,CAAgBJ,SAAS,MAAzB,UAEI,SAAC,IAAD,CAAKzE,GAAI,CAAE8E,GAAI,GAAf,UACI,SAAC,IAAD,CAAY9E,GAAI,CAAE+E,aAAc,QAAhC,UACI,SAAC,IAAD,CACIxC,QAAQ,UACRvC,GAAI,IACG8C,EAAMc,WAAWC,gBACjBf,EAAMc,WAAWE,aACpBL,WAAYX,EAAMiB,QAAQiB,OAAOhB,MACjCC,MAAOnB,EAAMiB,QAAQiB,OAAOd,KAC5B,UAAW,CACPT,WAAYX,EAAMiB,QAAQiB,OAAOd,KACjCD,MAAOnB,EAAMiB,QAAQiB,OAAOhB,YAGhCiB,EAAAA,EAAAA,IAAWZ,GAZnB,UAcI,SAAC,MAAD,CAAOK,OAAQ,IAAKC,KAAK,mBAM7C,mBAAiB,qBACjBO,WAAY,CAAE,aAAc,aAgFxC,IAnEuBpK,IACnB,MAAM,SAACiF,KAAYoF,GAASrK,EACtBgI,GAAQwB,EAAAA,EAAAA,MACPhI,EAAO8H,IAAYlJ,EAAAA,EAAAA,UAAS,IAEnC,OACI,iCACI,SAAC,IAAD,CAAK8E,GAAI,CAAEoF,QAAS,CAAEC,GAAI,QAASC,GAAI,SAAvC,UACI,SAAC,KAAD,CAAY/C,QAAQ,SAASgD,QAAQ,oBAArC,SACMlB,IACE,iCACI,SAAC,IAAD,CAAKrE,GAAI,CAAE8E,GAAI,GAAf,UACI,SAAC,IAAD,CAAY9E,GAAI,CAAE+E,aAAc,QAAhC,UACI,SAACrB,EAAD,CAAmBnB,QAAQ,cAAc0C,EAAAA,EAAAA,IAAWZ,GAApD,UACI,SAAC,MAAD,CAAYK,OAAQ,IAAKC,KAAK,kBAI1C,SAACjC,EAAD,KAAiB8C,EAAAA,EAAAA,IAAWnB,GAAaoB,YAAU,EAAnD,SACK,QAAC,gBAAEC,GAAH,SACG,+BACI,SAAC,IAAD,CAAaC,KAAK,UAAWD,EAAiB1F,GAAI,CAAE4F,gBAAiB,eAArE,UACI,SAAC,IAAD,CACI5F,GAAI,CACAyD,WAAY,OACZ,CAACX,EAAMI,YAAYC,KAAK,OAAQ,CAC5B0C,OAAQ,EACRC,UAAW,SALvB,UASI,SAAC,IAAD,CAAK9F,GAAI,CAAE+F,EAAG,GAAd,UACI,SAAC,KAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,eAAe,gBAAnD,UACI,SAAC,KAAD,CAAMjF,MAAI,EAACoE,IAAE,EAAb,UACI,SAAClB,EAAD,CAAc7H,MAAOA,EAAO8H,SAAUA,EAAUC,WAAYA,EAAYlI,aAAc4D,2BAatI,SAAC,IAAD,CAAKC,GAAI,CAAEoF,QAAS,CAAEC,GAAI,OAAQC,GAAI,UAAtC,UACI,SAAClC,EAAD,CACI3I,GAAG,sBAEHsF,SAAUA,EACVwE,YAAY,SACZC,gBACI,SAAC,IAAD,CAAgBC,SAAS,QAAzB,UACI,SAAC,MAAD,CAAYC,OAAQ,IAAKC,KAAK,OAAOV,MAAOnB,EAAMiB,QAAQa,KAAK,SAIvE,mBAAiB,qBACjBM,WAAY,CAAE,aAAc",
    "sources": [
        "views/utilities/Patient.js",
        "views/utilities/SearchSection.js"
    ],
    "sourcesContent": [
        "import React, { useEffect, useState, useRef, component } from \"react\"\nimport MainCard from 'ui-component/cards/MainCard'\nimport SearchSection from './SearchSection';\nimport { Table, TableCell, TableBody, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel } from '@mui/material'\nimport Paper from '@mui/material/Paper';\nimport { Button } from \"@mui/material\";\nimport { useNavigate } from 'react-router';\nimport ReactToPrint from \"react-to-print\";\n\nconst headCells = [\n    { id: 'PatientName', label: 'Name', minWidth: 170, },\n    { id: 'ContactNumber', label: 'Mobile No.', minWidth: 170, },\n    { id: 'Email1', label: 'Email 1', minWidth: 170, },\n    { id: 'Gender', label: 'Gender', minWidth: 80, },\n    { id: 'Action', label: 'Action', minWidth: 170, },\n    { id: 'Address', label: 'Address', minWidth: 120, },\n    { id: 'State', label: 'State', minWidth: 120, },\n    { id: 'Nationality', label: 'Nationality', minWidth: 80, },\n    { id: 'Age', label: 'Age', minWidth: 50, },\n    { id: 'DOB', label: 'DOB', minWidth: 110, },\n    { id: 'Email2', label: 'Email 2', minWidth: 170, },\n    { id: 'ReferredBy', label: 'Referred by', minWidth: 170, },\n\n\n\n]\nfunction getCookie(cname) {\n    let name = cname + \"=\";\n    let ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n\n// const Patient = () => {\nconst Patient = React.forwardRef((props, ref) => {\n\n    const [users, setUsers] = useState([])\n    let i = 1;\n    const history = useNavigate();\n\n    const clickMe = (data) => {\n        history(\"/module/module-scheduleAppointment/#redirected\", {\n            state:\n                data\n        });\n        // console.log(data);\n    }\n    const fetchData = () => {\n        fetch(\"http://65.1.110.101:3036/Patient/FindAllPatient\")\n            .then(response => {\n                return response.json()\n            })\n            .then(data => {\n                setUsers(data)\n            })\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n    const [records, setRecords] = useState()\n\n    useEffect(() => {\n        setRecords(users)\n    }, [users])\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\n    const [total, setTotal] = useState(0)\n    const handleSearch = e => {\n        let target = e.target;\n        setFilterFn({\n            fn: items => {\n                if (target.value == \"\")\n                    return items;\n                else\n\n                    return items.filter(x => x.PatientName?.toLowerCase().includes(target.value?.toLowerCase())\n                        || x.ContactNumber?.toString().includes(target.value)\n                        || x.AppoitmentDate?.toString().includes(target.value)\n                        || x.DOB?.toString().includes(target.value)\n                        || x.CaseNumber?.toString().includes(target.value?.toString())\n                        || x.Email1?.toLowerCase().includes(target.value?.toLowerCase())\n                        || x.Email2?.toLowerCase().includes(target.value?.toLowerCase())\n                        || x.ReferredBy?.toLowerCase().includes(target.value?.toLowerCase())\n\n                    )\n            }\n        })\n    }\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [order, setOrder] = useState()\n    const [orderBy, setOrderBy] = useState()\n\n\n\n\n\n    const handleSortRequest = cellId => {\n        const isAsc = orderBy === cellId && order === \"asc\";\n        setOrder(isAsc ? 'desc' : 'asc');\n\n        setOrderBy(cellId)\n    }\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    function getComparator(order, orderBy) {\n\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n\n    }\n\n    function descendingComparator(a, b, orderBy) {\n\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n    const recordsAfterPagingAndSorting = () => {\n        if (users)\n            return stableSort(filterFn.fn(users), getComparator(order, orderBy)).slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n    }\n    let componentRef = useRef()\n    if (getCookie(\"validate\")) {\n        return (\n            <>\n                {users && <MainCard title=\"Appointments\" secondary={<SearchSection onChange={handleSearch} />}>\n\n                    <Paper sx={{ width: '100%' }}>\n\n                        <TableContainer sx={{ maxHeight: 3000 }} >\n                            <div ref={el => (componentRef = el)}>\n                                <Table stickyHeader aria-label=\"sticky table\" sx={{\n                                    '& thead th': { backgroundColor: \"#ece6f5\", fontWeight: \"600\" }, '& tbody td': {\n                                        fontWeight: '300',\n                                    },\n                                    '& tbody tr:hover': {\n                                        backgroundColor: '#e3f2fd',\n                                        cursor: 'pointer',\n                                    },\n                                }}>\n                                    <TableHead>\n                                        <TableRow>\n                                            {\n                                                headCells.map(headCell => (\n                                                    <TableCell key={headCell.id} sortDirection={orderBy === headCell.id ? order : false} align='center' style={{ minWidth: headCell.minWidth }}>\n                                                        {headCell.disableSorting ? headCell.label :\n                                                            <TableSortLabel\n                                                                active={orderBy === headCell.id}\n                                                                direction={orderBy === headCell.id ? order : 'asc'}\n                                                                onClick={() => { handleSortRequest(headCell.id) }}>\n                                                                {headCell.label.toUpperCase()}\n                                                            </TableSortLabel>\n                                                        }</TableCell>\n                                                ))\n                                            }\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {\n                                            recordsAfterPagingAndSorting().map(item => (\n                                                console.log(item),\n                                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={item._id}>\n                                                    {/* <TableCell align='center' >{item._id}</TableCell> */}\n                                                    <TableCell align='center'>{item.PatientName}</TableCell>\n                                                    <TableCell align='center'>{item.ContactNumber}</TableCell>\n                                                    <TableCell align='center'>{item.Email1}</TableCell>\n                                                    <TableCell align='center'>{item.Gender}</TableCell>\n                                                    <TableCell align='center'><Button onClick={() => clickMe(item)}>Appoinemnt/Edit</Button></TableCell>\n                                                    <TableCell align='center'>{(!item.Flate ? \"\" : item.Flate + \",\") + (!item.Street ? \"\" : item.Street + \",\") + (!item.Village ? \"\" : item.Village + \",\") + \" \" + item.City}</TableCell>\n                                                    <TableCell align='center'>{item.State}</TableCell>\n                                                    <TableCell align='center'>{item.Nationality}</TableCell>\n                                                    <TableCell align='center'>{item.Age}</TableCell>\n                                                    <TableCell align='center'>{item.DOB}</TableCell>\n                                                    <TableCell align='center'>{item.Email2}</TableCell>\n                                                    <TableCell align='center'>{item.ReferredBy}</TableCell>\n                                                </TableRow>\n\n                                            ))\n                                        }\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </TableContainer>\n\n                        <TablePagination\n                            rowsPerPageOptions={[10, 25, 100]}\n                            component=\"div\"\n                            count={users.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onPageChange={handleChangePage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                        />\n                    </Paper>\n                    {/* <Button variant=\"outlined\" onClick={() => { console.log(\"printing\"); window.print(); }}>Print</Button> */}\n                    <ReactToPrint\n                        trigger={() => {\n                            return <Button variant=\"outlined\"> Print</Button>\n                        }}\n                        content={() => componentRef}\n                        documentTitle='Snehi Clinic'\n                    />\n                </MainCard>}\n\n\n\n            </>\n        )\n    } else {\n        return (<h1>Hello error</h1>)\n        // return (window.location.href = \"/Login\")\n    }\n})\n\nexport default Patient",
        "import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, ButtonBase, Card, Grid, InputAdornment, OutlinedInput, Popper } from '@mui/material';\n\n// third-party\nimport PopupState, { bindPopper, bindToggle } from 'material-ui-popup-state';\n\n// project imports\nimport Transitions from 'ui-component/extended/Transitions';\n\n// assets\nimport { IconAdjustmentsHorizontal, IconSearch, IconX } from '@tabler/icons';\nimport { shouldForwardProp } from '@mui/system';\n\n// styles\nconst PopperStyle = styled(Popper, { shouldForwardProp })(({ theme }) => ({\n    zIndex: 1100,\n    width: '99%',\n    top: '-55px !important',\n    padding: '0 12px',\n    [theme.breakpoints.down('sm')]: {\n        padding: '0 10px'\n    }\n}));\n\nconst OutlineInputStyle = styled(OutlinedInput, { shouldForwardProp })(({ theme }) => ({\n    width: 434,\n    marginLeft: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    '& input': {\n        background: 'transparent !important',\n        paddingLeft: '4px !important'\n    },\n    [theme.breakpoints.down('lg')]: {\n        width: 250\n    },\n    [theme.breakpoints.down('md')]: {\n        width: '100%',\n        marginLeft: 4,\n        background: '#fff'\n    }\n}));\n\nconst HeaderAvatarStyle = styled(Avatar, { shouldForwardProp })(({ theme }) => ({\n    ...theme.typography.commonAvatar,\n    ...theme.typography.mediumAvatar,\n    background: theme.palette.secondary.light,\n    color: theme.palette.secondary.dark,\n    '&:hover': {\n        background: theme.palette.secondary.dark,\n        color: theme.palette.secondary.light\n    }\n}));\n\n// ==============================|| SEARCH INPUT - MOBILE||============================== //\n\nconst MobileSearch = ({ value, setValue, popupState,handleSearch }) => {\n    const theme = useTheme();\n\n    return (\n        <OutlineInputStyle\n            id=\"input-search-header\"\n            // value={value}\n            onChange={handleSearch}\n            placeholder=\"Search\"\n            startAdornment={\n                <InputAdornment position=\"start\">\n                    <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\n                </InputAdornment>\n            }\n            endAdornment={\n                <InputAdornment position=\"end\">\n                    \n                    <Box sx={{ ml: 2 }}>\n                        <ButtonBase sx={{ borderRadius: '12px' }}>\n                            <Avatar\n                                variant=\"rounded\"\n                                sx={{\n                                    ...theme.typography.commonAvatar,\n                                    ...theme.typography.mediumAvatar,\n                                    background: theme.palette.orange.light,\n                                    color: theme.palette.orange.dark,\n                                    '&:hover': {\n                                        background: theme.palette.orange.dark,\n                                        color: theme.palette.orange.light\n                                    }\n                                }}\n                                {...bindToggle(popupState)}\n                            >\n                                <IconX stroke={1.5} size=\"1.3rem\" />\n                            </Avatar>\n                        </ButtonBase>\n                    </Box>\n                </InputAdornment>\n            }\n            aria-describedby=\"search-helper-text\"\n            inputProps={{ 'aria-label': 'weight' }}\n        />\n    );\n};\n\nMobileSearch.propTypes = {\n    value: PropTypes.string,\n    setValue: PropTypes.func,\n    popupState: PopupState\n};\n\n// ==============================|| SEARCH INPUT ||============================== //\n\nconst SearchSection = (props) => {\n    const {onChange,...other} = props;\n    const theme = useTheme();\n    const [value, setValue] = useState('');\n   \n    return (\n        <>\n            <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                <PopupState variant=\"popper\" popupId=\"demo-popup-popper\">\n                    {(popupState) => (\n                        <>\n                            <Box sx={{ ml: 2 }}>\n                                <ButtonBase sx={{ borderRadius: '12px' }}>\n                                    <HeaderAvatarStyle variant=\"rounded\" {...bindToggle(popupState)}>\n                                        <IconSearch stroke={1.5} size=\"1.2rem\" />\n                                    </HeaderAvatarStyle>\n                                </ButtonBase>\n                            </Box>\n                            <PopperStyle {...bindPopper(popupState)} transition>\n                                {({ TransitionProps }) => (\n                                    <>\n                                        <Transitions type=\"zoom\" {...TransitionProps} sx={{ transformOrigin: 'center left' }}>\n                                            <Card\n                                                sx={{\n                                                    background: '#fff',\n                                                    [theme.breakpoints.down('sm')]: {\n                                                        border: 0,\n                                                        boxShadow: 'none'\n                                                    }\n                                                }}\n                                            >\n                                                <Box sx={{ p: 2 }}>\n                                                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                        <Grid item xs>\n                                                            <MobileSearch value={value} setValue={setValue} popupState={popupState} handleSearch={onChange}/>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Box>\n                                            </Card>\n                                        </Transitions>\n                                    </>\n                                )}\n                            </PopperStyle>\n                        </>\n                    )}\n                </PopupState>\n            </Box>\n            <Box sx={{ display: { xs: 'none', md: 'block' } }}>\n                <OutlineInputStyle\n                    id=\"input-search-header\"\n                    // value={value}\n                    onChange={onChange}\n                    placeholder=\"Search\"\n                    startAdornment={\n                        <InputAdornment position=\"start\">\n                            <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\n                        </InputAdornment>\n                    }\n                    \n                    aria-describedby=\"search-helper-text\"\n                    inputProps={{ 'aria-label': 'weight' }}\n                />\n            </Box>\n        </>\n    );\n};\n\nexport default SearchSection;\n"
    ],
    "names": [
        "headCells",
        "id",
        "label",
        "minWidth",
        "Patient",
        "React",
        "props",
        "ref",
        "users",
        "setUsers",
        "useState",
        "history",
        "useNavigate",
        "useEffect",
        "fetch",
        "then",
        "response",
        "json",
        "data",
        "records",
        "setRecords",
        "filterFn",
        "setFilterFn",
        "fn",
        "items",
        "total",
        "setTotal",
        "handleSearch",
        "e",
        "target",
        "value",
        "filter",
        "x",
        "PatientName",
        "toLowerCase",
        "includes",
        "ContactNumber",
        "toString",
        "AppoitmentDate",
        "DOB",
        "CaseNumber",
        "Email1",
        "Email2",
        "ReferredBy",
        "page",
        "setPage",
        "rowsPerPage",
        "setRowsPerPage",
        "order",
        "setOrder",
        "orderBy",
        "setOrderBy",
        "handleChangePage",
        "event",
        "newPage",
        "handleChangeRowsPerPage",
        "descendingComparator",
        "a",
        "b",
        "recordsAfterPagingAndSorting",
        "array",
        "comparator",
        "stabilizedThis",
        "map",
        "el",
        "index",
        "sort",
        "stableSort",
        "getComparator",
        "slice",
        "componentRef",
        "useRef",
        "cname",
        "name",
        "ca",
        "document",
        "cookie",
        "split",
        "i",
        "length",
        "c",
        "charAt",
        "substring",
        "indexOf",
        "getCookie",
        "title",
        "secondary",
        "onChange",
        "sx",
        "width",
        "maxHeight",
        "stickyHeader",
        "backgroundColor",
        "fontWeight",
        "cursor",
        "headCell",
        "sortDirection",
        "align",
        "style",
        "disableSorting",
        "active",
        "direction",
        "onClick",
        "cellId",
        "toUpperCase",
        "item",
        "console",
        "log",
        "hover",
        "role",
        "tabIndex",
        "Gender",
        "state",
        "Flate",
        "Street",
        "Village",
        "City",
        "State",
        "Nationality",
        "Age",
        "_id",
        "rowsPerPageOptions",
        "component",
        "count",
        "onPageChange",
        "onRowsPerPageChange",
        "trigger",
        "variant",
        "content",
        "documentTitle",
        "PopperStyle",
        "styled",
        "Popper",
        "shouldForwardProp",
        "theme",
        "zIndex",
        "top",
        "padding",
        "breakpoints",
        "down",
        "OutlineInputStyle",
        "OutlinedInput",
        "marginLeft",
        "paddingLeft",
        "paddingRight",
        "background",
        "HeaderAvatarStyle",
        "Avatar",
        "typography",
        "commonAvatar",
        "mediumAvatar",
        "palette",
        "light",
        "color",
        "dark",
        "MobileSearch",
        "setValue",
        "popupState",
        "useTheme",
        "placeholder",
        "startAdornment",
        "position",
        "stroke",
        "size",
        "grey",
        "endAdornment",
        "ml",
        "borderRadius",
        "orange",
        "bindToggle",
        "inputProps",
        "other",
        "display",
        "xs",
        "md",
        "popupId",
        "bindPopper",
        "transition",
        "TransitionProps",
        "type",
        "transformOrigin",
        "border",
        "boxShadow",
        "p",
        "container",
        "alignItems",
        "justifyContent"
    ],
    "sourceRoot": ""
}