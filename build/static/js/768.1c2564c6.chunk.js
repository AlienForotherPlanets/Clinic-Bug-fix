"use strict"; (self.webpackChunkSnehi_Clinic = self.webpackChunkSnehi_Clinic || []).push([[768], { 52768: function (e, t, n) { n.r(t); var i = n(72791), r = n(23735), a = n(97582), l = n(39281), o = n(79836), d = n(56890), s = n(35855), c = n(53994), h = n(80720), u = n(53382), p = n(63033), x = n(10703), g = n(24518), m = n(16871), j = n(61146), v = n.n(j), b = n(80184); const Z = [{ id: "PatientName", label: "Name", minWidth: 170 }, { id: "ContactNumber", label: "Mobile No.", minWidth: 170 }, { id: "Email1", label: "Email 1", minWidth: 170 }, { id: "Gender", label: "Gender", minWidth: 80 }, { id: "Action", label: "Action", minWidth: 170 }, { id: "Address", label: "Address", minWidth: 120 }, { id: "State", label: "State", minWidth: 120 }, { id: "Nationality", label: "Nationality", minWidth: 80 }, { id: "Age", label: "Age", minWidth: 50 }, { id: "DOB", label: "DOB", minWidth: 110 }, { id: "Email2", label: "Email 2", minWidth: 170 }, { id: "ReferredBy", label: "Referred by", minWidth: 170 }]; const f = i.forwardRef(((e, t) => { const [n, j] = (0, i.useState)([]); const f = (0, m.s0)(); (0, i.useEffect)((() => { fetch("http://65.1.110.101:3036/Patient/FindAllPatient").then((e => e.json())).then((e => { j(e) })) }), []); const [k, y] = (0, i.useState)(); (0, i.useEffect)((() => { y(n) }), [n]); const [w, C] = (0, i.useState)({ fn: e => e }), [S, P] = (0, i.useState)(0), A = e => { let t = e.target; C({ fn: e => "" == t.value ? e : e.filter((e => { var n, i, r, a, l, o, d, s, c, h, u, p, x; return (null === (n = e.PatientName) || void 0 === n ? void 0 : n.toLowerCase().includes(null === (i = t.value) || void 0 === i ? void 0 : i.toLowerCase())) || (null === (r = e.ContactNumber) || void 0 === r ? void 0 : r.toString().includes(t.value)) || (null === (a = e.AppoitmentDate) || void 0 === a ? void 0 : a.toString().includes(t.value)) || (null === (l = e.DOB) || void 0 === l ? void 0 : l.toString().includes(t.value)) || (null === (o = e.CaseNumber) || void 0 === o ? void 0 : o.toString().includes(null === (d = t.value) || void 0 === d ? void 0 : d.toString())) || (null === (s = e.Email1) || void 0 === s ? void 0 : s.toLowerCase().includes(null === (c = t.value) || void 0 === c ? void 0 : c.toLowerCase())) || (null === (h = e.Email2) || void 0 === h ? void 0 : h.toLowerCase().includes(null === (u = t.value) || void 0 === u ? void 0 : u.toLowerCase())) || (null === (p = e.ReferredBy) || void 0 === p ? void 0 : p.toLowerCase().includes(null === (x = t.value) || void 0 === x ? void 0 : x.toLowerCase())) })) }) }, [W, L] = (0, i.useState)(0), [N, E] = (0, i.useState)(10), [R, F] = (0, i.useState)(), [B, O] = (0, i.useState)(), V = (e, t) => { L(t) }, z = e => { E(+e.target.value), L(0) }; function D(e, t, n) { return t[n] < e[n] ? -1 : t[n] > e[n] ? 1 : 0 } const I = () => { if (n) return function (e, t) { const n = e.map(((e, t) => [e, t])); return n.sort(((e, n) => { const i = t(e[0], n[0]); return 0 !== i ? i : e[1] - n[1] })), n.map((e => e[0])) }(w.fn(n), function (e, t) { return "desc" === e ? (e, n) => D(e, n, t) : (e, n) => -D(e, n, t) }(R, B)).slice(W * N, (W + 1) * N) }; let G = (0, i.useRef)(); return function (e) { let t = e + "=", n = document.cookie.split(";"); for (let i = 0; i < n.length; i++) { let e = n[i]; for (; " " == e.charAt(0);)e = e.substring(1); if (0 == e.indexOf(t)) return e.substring(t.length, e.length) } return "" }("validate") ? (0, b.jsx)(b.Fragment, { children: n && (0, b.jsxs)(r.Z, { title: "Appointments", secondary: (0, b.jsx)(a.Z, { onChange: A }), children: [(0, b.jsxs)(x.Z, { sx: { width: "100%" }, children: [(0, b.jsx)(l.Z, { sx: { maxHeight: 3e3 }, children: (0, b.jsx)("div", { ref: e => G = e, children: (0, b.jsxs)(o.Z, { stickyHeader: !0, "aria-label": "sticky table", sx: { "& thead th": { backgroundColor: "#ece6f5", fontWeight: "600" }, "& tbody td": { fontWeight: "300" }, "& tbody tr:hover": { backgroundColor: "#e3f2fd", cursor: "pointer" } }, children: [(0, b.jsx)(d.Z, { children: (0, b.jsx)(s.Z, { children: Z.map((e => (0, b.jsx)(c.Z, { sortDirection: B === e.id && R, align: "center", style: { minWidth: e.minWidth }, children: e.disableSorting ? e.label : (0, b.jsx)(h.Z, { active: B === e.id, direction: B === e.id ? R : "asc", onClick: () => { var t; t = e.id, F(B === t && "asc" === R ? "desc" : "asc"), O(t) }, children: e.label.toUpperCase() }) }, e.id))) }) }), (0, b.jsx)(u.Z, { children: I().map((e => (console.log(e), (0, b.jsxs)(s.Z, { hover: !0, role: "checkbox", tabIndex: -1, children: [(0, b.jsx)(c.Z, { align: "center", children: e.PatientName }), (0, b.jsx)(c.Z, { align: "center", children: e.ContactNumber }), (0, b.jsx)(c.Z, { align: "center", children: e.Email1 }), (0, b.jsx)(c.Z, { align: "center", children: e.Gender }), (0, b.jsx)(c.Z, { align: "center", children: (0, b.jsx)(g.Z, { onClick: () => { f("/module/module-scheduleAppointment/#redirected", { state: e }) }, children: "Appoinemnt/Edit" }) }), (0, b.jsx)(c.Z, { align: "center", children: (e.Flate ? e.Flate + "," : "") + (e.Street ? e.Street + "," : "") + (e.Village ? e.Village + "," : "") + " " + e.City }), (0, b.jsx)(c.Z, { align: "center", children: e.State }), (0, b.jsx)(c.Z, { align: "center", children: e.Nationality }), (0, b.jsx)(c.Z, { align: "center", children: e.Age }), (0, b.jsx)(c.Z, { align: "center", children: e.DOB }), (0, b.jsx)(c.Z, { align: "center", children: e.Email2 }), (0, b.jsx)(c.Z, { align: "center", children: e.ReferredBy })] }, e._id)))) })] }) }) }), (0, b.jsx)(p.Z, { rowsPerPageOptions: [10, 25, 100], component: "div", count: n.length, rowsPerPage: N, page: W, onPageChange: V, onRowsPerPageChange: z })] }), (0, b.jsx)(v(), { trigger: () => (0, b.jsx)(g.Z, { variant: "outlined", children: " Print" }), content: () => G, documentTitle: "Snehi Clinic" })] }) }) : (0, b.jsx)("h1", { children: "Hello error" }) })); t.default = f }, 97582: function (e, t, n) { var i = n(72791), r = n(66934), a = n(13967), l = n(95892), o = n(28029), d = n(93044), s = n(63466), c = n(64554), h = n(95080), u = n(57621), p = n(61889), x = n(73719), g = n(63868), m = n(58956), j = n(44046), v = n(80184); const b = (0, r.ZP)(l.Z, { shouldForwardProp: j.x9 })((e => { let { theme: t } = e; return { zIndex: 1100, width: "99%", top: "-55px !important", padding: "0 12px", [t.breakpoints.down("sm")]: { padding: "0 10px" } } })), Z = (0, r.ZP)(o.Z, { shouldForwardProp: j.x9 })((e => { let { theme: t } = e; return { width: 434, marginLeft: 16, paddingLeft: 16, paddingRight: 16, "& input": { background: "transparent !important", paddingLeft: "4px !important" }, [t.breakpoints.down("lg")]: { width: 250 }, [t.breakpoints.down("md")]: { width: "100%", marginLeft: 4, background: "#fff" } } })), f = (0, r.ZP)(d.Z, { shouldForwardProp: j.x9 })((e => { let { theme: t } = e; return { ...t.typography.commonAvatar, ...t.typography.mediumAvatar, background: t.palette.secondary.light, color: t.palette.secondary.dark, "&:hover": { background: t.palette.secondary.dark, color: t.palette.secondary.light } } })), k = e => { let { value: t, setValue: n, popupState: i, handleSearch: r } = e; const l = (0, a.Z)(); return (0, v.jsx)(Z, { id: "input-search-header", onChange: r, placeholder: "Search", startAdornment: (0, v.jsx)(s.Z, { position: "start", children: (0, v.jsx)(m.jVj, { stroke: 1.5, size: "1rem", color: l.palette.grey[500] }) }), endAdornment: (0, v.jsx)(s.Z, { position: "end", children: (0, v.jsx)(c.Z, { sx: { ml: 2 }, children: (0, v.jsx)(h.Z, { sx: { borderRadius: "12px" }, children: (0, v.jsx)(d.Z, { variant: "rounded", sx: { ...l.typography.commonAvatar, ...l.typography.mediumAvatar, background: l.palette.orange.light, color: l.palette.orange.dark, "&:hover": { background: l.palette.orange.dark, color: l.palette.orange.light } }, ...(0, x.LI)(i), children: (0, v.jsx)(m.kLi, { stroke: 1.5, size: "1.3rem" }) }) }) }) }), "aria-describedby": "search-helper-text", inputProps: { "aria-label": "weight" } }) }; t.Z = e => { const { onChange: t, ...n } = e, r = (0, a.Z)(), [l, o] = (0, i.useState)(""); return (0, v.jsxs)(v.Fragment, { children: [(0, v.jsx)(c.Z, { sx: { display: { xs: "block", md: "none" } }, children: (0, v.jsx)(x.ZP, { variant: "popper", popupId: "demo-popup-popper", children: e => (0, v.jsxs)(v.Fragment, { children: [(0, v.jsx)(c.Z, { sx: { ml: 2 }, children: (0, v.jsx)(h.Z, { sx: { borderRadius: "12px" }, children: (0, v.jsx)(f, { variant: "rounded", ...(0, x.LI)(e), children: (0, v.jsx)(m.jVj, { stroke: 1.5, size: "1.2rem" }) }) }) }), (0, v.jsx)(b, { ...(0, x.Rg)(e), transition: !0, children: n => { let { TransitionProps: i } = n; return (0, v.jsx)(v.Fragment, { children: (0, v.jsx)(g.Z, { type: "zoom", ...i, sx: { transformOrigin: "center left" }, children: (0, v.jsx)(u.Z, { sx: { background: "#fff", [r.breakpoints.down("sm")]: { border: 0, boxShadow: "none" } }, children: (0, v.jsx)(c.Z, { sx: { p: 2 }, children: (0, v.jsx)(p.ZP, { container: !0, alignItems: "center", justifyContent: "space-between", children: (0, v.jsx)(p.ZP, { item: !0, xs: !0, children: (0, v.jsx)(k, { value: l, setValue: o, popupState: e, handleSearch: t }) }) }) }) }) }) }) } })] }) }) }), (0, v.jsx)(c.Z, { sx: { display: { xs: "none", md: "block" } }, children: (0, v.jsx)(Z, { id: "input-search-header", onChange: t, placeholder: "Search", startAdornment: (0, v.jsx)(s.Z, { position: "start", children: (0, v.jsx)(m.jVj, { stroke: 1.5, size: "1rem", color: r.palette.grey[500] }) }), "aria-describedby": "search-helper-text", inputProps: { "aria-label": "weight" } }) })] }) } } }]);
//# sourceMappingURL=768.1c2564c6.chunk.js.map