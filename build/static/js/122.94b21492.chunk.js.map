{"version":3,"file":"static/js/122.94b21492.chunk.js","mappings":"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","sources":["views/utilities/AvailabilityDoctorForm.js","views/utilities/Availability.js"],"sourcesContent":["import { Divider, Grid, Switch, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\nimport MainCard from 'ui-component/cards/MainCard'\r\nimport Controls from './controls/Controls'\r\nimport * as employeeService from \"./services/employeeService\";\r\nimport AvailableTable from './AvailableTable'\r\nimport { Paper } from '@mui/material'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { useForm, Form } from './useForm';\r\nimport { FormControlLabel } from '@mui/material';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport TextField from '@mui/material/TextField';\r\nimport AvailableDisplay from './AvailableDisplay'\r\nimport AvailableForm from './AvailableForm'\r\nimport { Button } from '@mui/material'\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport { makeStyles } from '@mui/styles'\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableContainer,\r\n    TableRow,\r\n    TableCell,\r\n    TableHead\r\n\r\n} from '@mui/material';\r\nimport { useEffect } from 'react'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    menuPaper: {\r\n        maxHeight: 300\r\n    }\r\n}));\r\nconst AvailabilityDoctorForm = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [checked, setChecked] = useState(true)\r\n    const [start, setStart] = useState('9:00 am')\r\n    const [sundayrows, setSundayrows] = React.useState([{}])\r\n    const [mondayrows, setMondayrows] = React.useState([{}])\r\n    const [tuesdayrows, setTuesdayrows] = React.useState([{}])\r\n    const [wednesdayrows, setWednesdayrows] = React.useState([{}])\r\n    const [thursdayrows, setThursdayrows] = React.useState([{}])\r\n    const [fridayrows, setFridayrows] = React.useState([{}])\r\n    const [saturdayrows, setSaturdayrows] = React.useState([{}])\r\n    const initialFValues = {\r\n        id: 0,\r\n        starttime: '',\r\n        endtime: '',\r\n        ScheduleDate: '',\r\n        reason: '',\r\n        userno: props.userno,\r\n\r\n    }\r\n    const [notavailable, setNotAvailable] = useState(false)\r\n    const handleDelete = () => {\r\n\r\n    };\r\n\r\n    const VALID_NOTES = [\r\n        \"C\",\r\n        \"C#\",\r\n        \"D\",\r\n        \"D#\",\r\n        \"E\",\r\n        \"F\",\r\n        \"F#\",\r\n        \"G\",\r\n        \"G#\",\r\n        \"A\",\r\n        \"A#\",\r\n        \"C#\",\r\n        \"D\",\r\n        \"D#\",\r\n        \"E\",\r\n        \"F\",\r\n        \"F#\",\r\n        \"G\",\r\n        \"G#\",\r\n        \"A\",\r\n        \"A#\",\r\n        \"C#\",\r\n        \"D\",\r\n        \"D#\",\r\n        \"E\",\r\n        \"F\",\r\n        \"F#\",\r\n        \"G\",\r\n        \"G#\",\r\n        \"A\",\r\n        \"A#\",\r\n        \"C#\",\r\n        \"D\",\r\n        \"D#\",\r\n        \"E\",\r\n        \"F\",\r\n        \"F#\",\r\n        \"G\",\r\n        \"G#\",\r\n        \"A\",\r\n        \"A#\",\r\n        \"B\"\r\n    ];\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues);\r\n    const [starttime, setStarttime] = useState('')\r\n    const [endtime, setEndtime] = useState('')\r\n    const [note, setNote] = React.useState(\"\");\r\n    const [weeklyavailable, setWeeklyavailable] = React.useState(true)\r\n    const handleChange = event => {\r\n        setNote(event.target.value);\r\n    };\r\n    useEffect(() => {\r\n        setValues({ ...values, ['starttime']: starttime })\r\n    }, [starttime])\r\n    useEffect(() => {\r\n        setValues({ ...values, ['endtime']: endtime })\r\n    }, [endtime])\r\n    //    console.log(values)\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        //   console.log(\"hadnle sub\",values)\r\n        setValues(initialFValues)\r\n        setStarttime('')\r\n        setEndtime('')\r\n\r\n        // console.log(values)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2}>\r\n\r\n                <Grid item xs={12} sm={7}>\r\n                    <MainCard title=\"Schedule Override\" sx={{ minHeight: '300px' }}  >\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Grid container spacing={2}>\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Controls.DatePicker\r\n                                        name=\"ScheduleDate\"\r\n                                        label=\"Date\"\r\n                                        value={values.ScheduleDate}\r\n                                        onChange={handleInputChange}\r\n\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch checked={notavailable} onChange={(e) => { setNotAvailable(!notavailable) }} />\r\n                                        }\r\n                                        label=\"Mark As Unavailable\"\r\n                                    />\r\n\r\n                                </Grid>\r\n                                {notavailable ?\r\n                                    <Grid item xs={12} sm={6}> </Grid>\r\n                                    :\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                                    <TimePicker\r\n\r\n                                                        value={starttime}\r\n                                                        onChange={setStarttime}\r\n                                                        renderInput={(params) => <TextField {...params} />}\r\n                                                    />\r\n                                                </LocalizationProvider>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                                    <TimePicker\r\n\r\n                                                        value={endtime}\r\n                                                        onChange={setEndtime}\r\n                                                        renderInput={(params) => <TextField {...params} />}\r\n                                                    /> </LocalizationProvider>\r\n\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                }\r\n                                <Grid item xs={12} sm={6}>\r\n\r\n                                    <Controls.Input\r\n                                        name='reason'\r\n                                        label='Reason'\r\n                                        value={values.reason}\r\n                                        onChange={handleInputChange}\r\n\r\n                                    />\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n\r\n                                    <Controls.Buttons\r\n                                        text=\"Submit\"\r\n                                        type=\"submit\"\r\n                                    />\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Form>\r\n\r\n                    </MainCard>\r\n                </Grid>\r\n                <Grid item xs={12} sm={5}>\r\n                    <MainCard sx={{ height: '300px' }}>\r\n\r\n                        <TableContainer sx={{ maxHeight: 280 }} component={Paper} >\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n\r\n                                <TableBody>\r\n                                    {\r\n                                        props.available.map((data) => (\r\n                                            <TableRow sx={{\r\n                                                '& .css-1uhymze-MuiTableCell-root': {\r\n                                                    padding: '10px'\r\n                                                },\r\n                                                '& .css-hhoizy-MuiTypography-root': {\r\n                                                    fontSize: '14px'\r\n                                                },\r\n                                                '& .css-102lq7w-MuiTypography-root': {\r\n                                                    fontSize: '16px'\r\n                                                },\r\n                                                '& .css-j8cz80-MuiTypography-root': {\r\n                                                    color: 'red',\r\n                                                    fontSize: '14px'\r\n                                                }\r\n                                            }} key=\"4\">\r\n                                                <TableCell>\r\n                                                    <Typography >{data.date}</Typography>\r\n\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n\r\n                                                    <Typography >{data.starttime} - {data.endtime}</Typography>\r\n                                                    <Typography >{data.reason}</Typography>\r\n\r\n\r\n                                                </TableCell>\r\n\r\n                                                <TableCell>\r\n                                                    <Typography color=\"textSecondary\" variant=\"body2\"><Button variant=\"outlined\" onClick={handleDelete}>delete</Button></Typography>\r\n\r\n                                                </TableCell>\r\n                                            </TableRow>))}\r\n                                </TableBody>\r\n\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n\r\n\r\n                    </MainCard>\r\n                </Grid>\r\n            </Grid>\r\n            <MainCard sx={{ marginTop: '10px' }}>\r\n                <TableContainer sx={{ maxWidth: '90%' }} component={Paper}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        {/* <TableHead>\r\n        <TableCell width={23}>\r\n       <Typography ></Typography>\r\n      \r\n       </TableCell>\r\n       <TableCell width={23}>\r\n       <Typography ></Typography>\r\n      \r\n       </TableCell>\r\n       <TableCell>\r\n       <Typography >Morning</Typography>\r\n       </TableCell>\r\n       <TableCell>\r\n       <Typography >AfterNoon</Typography>\r\n      \r\n       </TableCell>\r\n       <TableCell>\r\n       <Typography >Evening</Typography>\r\n      \r\n       </TableCell>\r\n      \r\n        </TableHead> */}\r\n                        <TableBody>\r\n\r\n                            <TableRow sx={{\r\n                                '& .css-1uhymze-MuiTableCell-root': {\r\n                                    padding: '10px'\r\n                                },\r\n                                '& .css-hhoizy-MuiTypography-root': {\r\n                                    fontSize: '14px'\r\n                                },\r\n                                '& .css-102lq7w-MuiTypography-root': {\r\n                                    fontSize: '16px'\r\n                                },\r\n                                '& .css-j8cz80-MuiTypography-root': {\r\n                                    color: 'red',\r\n                                    fontSize: '14px'\r\n                                }\r\n                            }} key=\"4\">\r\n\r\n                                <TableCell>\r\n                                    <Typography >Sunday</Typography>\r\n\r\n                                </TableCell>\r\n                                <TableCell>\r\n\r\n                                    <Typography >  <FormGroup>\r\n                                        <FormControlLabel control={<Switch checked={weeklyavailable} onChange={() => setWeeklyavailable(!weeklyavailable)} />} label=\"Label\" />\r\n                                    </FormGroup></Typography>\r\n\r\n                                </TableCell>\r\n\r\n                                <TableCell sx={{ paddingRight: '0px' }}>\r\n\r\n                                    <FormControl sx={{ minWidth: \"100px\" }} size=\"small\">\r\n\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={note}\r\n                                            disabled={!weeklyavailable}\r\n                                            onChange={handleChange}\r\n                                            MenuProps={{ classes: { paper: classes.menuPaper } }}\r\n                                        >\r\n                                            {VALID_NOTES.map(validNote => (\r\n                                                <MenuItem value={validNote}>{validNote}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell sx={{ paddingLeft: '3px' }}>\r\n                                    <FormControl sx={{ minWidth: \"100px\" }} size=\"small\">\r\n\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={note}\r\n                                            disabled={!weeklyavailable}\r\n                                            onChange={handleChange}\r\n                                            MenuProps={{ classes: { paper: classes.menuPaper } }}\r\n                                        >\r\n                                            {VALID_NOTES.map(validNote => (\r\n                                                <MenuItem value={validNote}>{validNote}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell sx={{ paddingRight: '0px' }}>\r\n                                    <FormControl sx={{ minWidth: \"100px\" }} size=\"small\">\r\n\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={note}\r\n                                            disabled={!weeklyavailable}\r\n\r\n                                            onChange={handleChange}\r\n                                            MenuProps={{ classes: { paper: classes.menuPaper } }}\r\n                                        >\r\n                                            {VALID_NOTES.map(validNote => (\r\n                                                <MenuItem value={validNote}>{validNote}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                </TableCell>\r\n                                <TableCell sx={{ paddingLeft: '3px' }}>\r\n                                    <FormControl sx={{ minWidth: \"100px\" }} size=\"small\">\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={note}\r\n                                            disabled={!weeklyavailable}\r\n\r\n                                            onChange={handleChange}\r\n                                            MenuProps={{ classes: { paper: classes.menuPaper } }}\r\n                                        >\r\n                                            {VALID_NOTES.map(validNote => (\r\n                                                <MenuItem value={validNote}>{validNote}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell sx={{ paddingRight: '0px' }}>\r\n                                    <FormControl sx={{ minWidth: \"100px\" }} size=\"small\">\r\n\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={note}\r\n                                            disabled={!weeklyavailable}\r\n\r\n                                            onChange={handleChange}\r\n                                            MenuProps={{ classes: { paper: classes.menuPaper } }}\r\n                                        >\r\n                                            {VALID_NOTES.map(validNote => (\r\n                                                <MenuItem value={validNote}>{validNote}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell sx={{ paddingLeft: '3px' }}>\r\n                                    <FormControl sx={{ minWidth: \"100px\" }} size=\"small\">\r\n\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={note}\r\n                                            disabled={!weeklyavailable}\r\n\r\n                                            onChange={handleChange}\r\n                                            MenuProps={{ classes: { paper: classes.menuPaper } }}\r\n                                        >\r\n                                            {VALID_NOTES.map(validNote => (\r\n                                                <MenuItem value={validNote}>{validNote}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                </TableCell>\r\n\r\n\r\n                            </TableRow>\r\n\r\n                        </TableBody>\r\n\r\n                    </Table>\r\n                </TableContainer>\r\n            </MainCard>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AvailabilityDoctorForm","import { Divider, Grid, Switch, Typography } from '@mui/material'\nimport React from 'react'\nimport { useState } from 'react'\nimport MainCard from 'ui-component/cards/MainCard'\nimport Controls from './controls/Controls'\nimport * as employeeService from \"./services/employeeService\";\nimport AvailableTable from './AvailableTable'\nimport { Paper } from '@mui/material'\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { useForm, Form } from './useForm';\nimport { FormControlLabel } from '@mui/material';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport TextField from '@mui/material/TextField';\nimport AvailableDisplay from './AvailableDisplay'\nimport AvailableForm from './AvailableForm'\nimport { Button } from '@mui/material'\nimport {\n  Table,\n  TableBody,\n  TableContainer,\n  TableRow,\n  TableCell,\n  TableHead\n\n} from '@mui/material';\nimport { useEffect } from 'react'\nimport AvailabilityDoctorForm from './AvailabilityDoctorForm'\nconst Availability = ({ trigger }) => {\n\n  const [checked, setChecked] = useState(true)\n  const [start, setStart] = useState('9:00 am')\n  const [sundayrows, setSundayrows] = React.useState([{}])\n  const [mondayrows, setMondayrows] = React.useState([{}])\n  const [tuesdayrows, setTuesdayrows] = React.useState([{}])\n  const [wednesdayrows, setWednesdayrows] = React.useState([{}])\n  const [thursdayrows, setThursdayrows] = React.useState([{}])\n  const [fridayrows, setFridayrows] = React.useState([{}])\n  const [saturdayrows, setSaturdayrows] = React.useState([{}])\n\n  const [selectAvailability, setSelectAvailability] = React.useState(1);\n  let available = [\n    { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' }, { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' },\n\n    { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' }, { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' },\n    { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' }, { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' },\n    { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' }, { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' },\n    { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' }, { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' },\n    { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' }, { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' },\n    { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' }, { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' },\n    { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' }, { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' },\n    { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' }, { date: 'Nov 3 2022', starttime: '12:08pm', endtime: '1:10pm', reason: 'Holiday' },\n\n\n  ]\n\n  const handleDelete = () => {\n\n  };\n\n  const [notavailable, setNotAvailable] = useState(false)\n  const [isAv, setIsAv] = useState(false)\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors }\n\n\n    if (fieldValues == values)\n      return Object.values(temp).every(x => x == \"\")\n  }\n  let initialFValues = {\n    id: 0,\n    starttime: '',\n    endtime: '',\n    ScheduleDate: '',\n    reason: '',\n    userno: '1',\n  }\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, validate);\n  const [starttime, setStarttime] = useState('')\n  const [endtime, setEndtime] = useState('')\n  const handleChange = (event) => {\n    console.log(event.target.value);\n    setSelectAvailability(event.target.value);\n    setStarttime('')\n    setEndtime('')\n  };\n  useEffect(() => {\n\n    setValues(initialFValues)\n    values.userno = selectAvailability\n\n    console.log(selectAvailability);\n\n  }, [selectAvailability, trigger])\n  console.log(values)\n\n  useEffect(() => {\n    setValues({ ...values, ['starttime']: starttime })\n  }, [starttime])\n  useEffect(() => {\n    setValues({ ...values, ['endtime']: endtime })\n  }, [endtime])\n  //  console.log(values)\n  const handleSubmit = e => {\n    e.preventDefault()\n    // if (validate()) {\n    console.log(values)\n    setValues(initialFValues)\n    setStarttime('')\n    setEndtime('')\n    // addOrEdit(values, resetForm);\n    // }\n  }\n\n\n  return (\n    <>\n      <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n        <InputLabel id=\"demo-select-small\"></InputLabel>\n        <Select\n          labelId=\"demo-select-small\"\n          id=\"demo-select-small\"\n          value={selectAvailability}\n          onChange={handleChange}\n        >\n\n          <MenuItem value={1}>Clinic</MenuItem>\n          <MenuItem value={2}>Dr. Rakesh</MenuItem>\n          <MenuItem value={3}>Dr. snehal</MenuItem>\n        </Select>\n      </FormControl>\n      {\n        selectAvailability == 1 ? <AvailabilityDoctorForm userno={1} available={available} /> : null\n\n      }\n      {\n        selectAvailability == 2 ? <AvailabilityDoctorForm userno={2} available={available} /> : null\n      }\n      {\n        selectAvailability == 3 ? <AvailabilityDoctorForm userno={3} available={available} /> : null\n\n      }\n\n    </>\n  )\n}\n\nexport default Availability"],"names":["useStyles","makeStyles","theme","menuPaper","maxHeight","props","classes","checked","setChecked","useState","start","setStart","sundayrows","setSundayrows","React","mondayrows","setMondayrows","tuesdayrows","setTuesdayrows","wednesdayrows","setWednesdayrows","thursdayrows","setThursdayrows","fridayrows","setFridayrows","saturdayrows","setSaturdayrows","initialFValues","id","starttime","endtime","ScheduleDate","reason","userno","notavailable","setNotAvailable","handleDelete","VALID_NOTES","values","setValues","errors","setErrors","handleInputChange","resetForm","useForm","setStarttime","setEndtime","note","setNote","weeklyavailable","setWeeklyavailable","handleChange","event","target","value","useEffect","Grid","container","spacing","item","xs","sm","MainCard","title","sx","minHeight","onSubmit","e","preventDefault","Controls","name","label","onChange","FormControlLabel","control","Switch","LocalizationProvider","dateAdapter","AdapterDayjs","TimePicker","renderInput","params","TextField","text","type","height","TableContainer","component","Paper","Table","stickyHeader","TableBody","available","map","data","TableRow","padding","fontSize","color","TableCell","Typography","date","variant","Button","onClick","marginTop","maxWidth","FormGroup","paddingRight","FormControl","minWidth","size","Select","labelId","disabled","MenuProps","paper","validNote","MenuItem","paddingLeft","trigger","selectAvailability","setSelectAvailability","isAv","setIsAv","fieldValues","temp","Object","every","x","console","log","m","InputLabel"],"sourceRoot":""}