{"version":3,"file":"static/js/426.f96e4430.chunk.js","mappings":"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","sources":["views/utilities/AvailableDisplay.js","views/utilities/AvailableForm.js","views/utilities/controls/ActionButton.js","views/utilities/controls/Input.js","views/utilities/controls/RadioGroup.js","views/utilities/controls/Controls.js","views/utilities/controls/DatePicker.js","views/utilities/controls/Buttons.js","views/utilities/controls/Checkbox.js","views/utilities/controls/Popup.js","views/utilities/controls/Select.js","views/utilities/services/employeeService.js","views/utilities/useForm.js","views/utilities/useTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AvailableForm from './AvailableForm';\nimport { makeStyles } from '@mui/styles';\n\nimport { Paper, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@mui/material';\nimport useTable from './useTable';\nimport * as employeeService from './services/employeeService';\nimport Controls from './controls/Controls';\n// import { Search } from '@material-ui/icons';\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from './controls/Popup';\n// import EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst headCells = [\n    { id: 'fullName', label: 'Employee Name' },\n    { id: 'email', label: 'Email Address (Personal)' },\n    { id: 'mobile', label: 'Mobile Number' },\n    { id: 'department', label: 'Department' },\n    { id: 'actions', label: 'Actions', disableSorting: true }\n];\nexport default function AvailableDisplay() {\n    const [recordForEdit, setRecordForEdit] = useState(null);\n    const [records, setRecords] = useState(employeeService.getAllEmployees());\n    const [filterFn, setFilterFn] = useState({\n        fn: (items) => {\n            return items;\n        }\n    });\n    const [openPopup, setOpenPopup] = useState(false);\n    const { TbleContainer, TblHead, recordsAfterPagingAndSorting, TblPaging } = useTable(records, headCells, filterFn);\n\n    const handleSearch = (e) => {\n        let target = e.target;\n        setFilterFn({\n            fn: (items) => {\n                if (target.value == '') {\n                    return items;\n                }\n                else return items.filter(x => x.fullName.toLowerCase().includes(target.value))\n            }\n        });\n    };\n\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id == 0) employeeService.insertEmployee(employee);\n        else employeeService.updateEmployee(employee);\n        resetForm();\n        setRecordForEdit(null);\n        setOpenPopup(false);\n        setRecords(employeeService.getAllEmployees());\n    };\n\n    const openInPopup = (item) => {\n        setRecordForEdit(item);\n        setOpenPopup(true);\n    };\n    const onDelete = (id) => {\n        employeeService.deleteEmployee(id);\n        setRecords(employeeService.getAllEmployees())\n    };\n    return (\n        <>\n\n\n            <Toolbar>\n                <Controls.Buttons\n                    text='Add New'\n                    variant='outlined'\n                    startIcon={<AddIcon />}\n\n                    onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\n                />\n            </Toolbar>\n            <TbleContainer>\n                <TableBody>\n                    {\n                        recordsAfterPagingAndSorting().map(item =>\n                        (<TableRow key={item.id}>\n                            <TableCell>{item.ScheduleDate}</TableCell>\n                            <TableCell>{item.starttime} - {item.endtime}</TableCell>\n                            <TableCell>\n\n                                <Controls.ActionButton\n                                    color='secondary'\n                                    onClick={\n                                        () => { onDelete(item.id) }\n\n                                    }>\n                                    <CloseIcon fontSize='small' />\n                                </Controls.ActionButton>\n                            </TableCell>\n                        </TableRow>)\n                        )\n                    }\n                </TableBody>\n            </TbleContainer>\n\n\n            <Popup\n                title='Schedule Override'\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n\n            >\n                <AvailableForm\n                    recordForEdit={recordForEdit}\n                    addOrEdit={addOrEdit} />\n            </Popup>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Grid, Switch} from '@mui/material';\nimport Controls from \"./controls/Controls\";\nimport { useForm, Form } from './useForm';\nimport * as employeeService from \"./services/employeeService\";\nimport Select from './controls/Select';\nimport {FormControlLabel} from '@mui/material';\n\n\nconst initialFValues = {\n    id: 0,\n    starttime: '',\n    endtime:'',\n    ScheduleDate: '',\n}\n\nexport default function AvailableForm(props) {\n    const { addOrEdit, recordForEdit } = props\nconst [notavailable,setNotAvailable] = useState(false)\nconst [isAv,setIsAv] = useState(false)\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n      \n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues,  validate);\n   \n    const handleSubmit = e => {\n        e.preventDefault()\n        // if (validate()) {\n          console.log(values)\n\n            addOrEdit(values, resetForm);\n        // }\n    }\n    \n    useEffect(() => {\n        if (recordForEdit != null)\n            setValues({\n                ...recordForEdit\n            })\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n                  \n            <Grid item xs={12} sm={6}>\n                <Controls.DatePicker\n                    name=\"ScheduleDate\"\n                    label=\"Date\"\n                    value={values.ScheduleDate}\n                    onChange={handleInputChange}\n                     \n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <FormControlLabel\n          control={\n            <Switch checked={notavailable}   onChange={(e)=>{setNotAvailable(!notavailable)}}/>\n          }\n          label=\"Mark As Unavailable\"\n        />\n            \n            </Grid>\n      {  notavailable ?  \n                     <Grid item xs={12} sm={6}> </Grid>  \n                    :\n                    <Grid item xs={12} sm={6}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n                    <Select\n                        name=\"starttime\"\n                        label=\"Start Time\"\n                        value={values.starttime}  \n                        options={employeeService.getTimeCollection()}\n                        onChange={handleInputChange}\n                        \n                    />\n                    </Grid> \n                    <Grid item xs={12} sm={6}>\n                    <Select\n                        name=\"endtime\"\n                        label=\"End Time\"\n                        onChange={handleInputChange}\n\n                        value={values.endtime}  \n                        options={employeeService.getTimeCollection()}\n                        \n                    />\n                    </Grid> \n                    </Grid>\n                    </Grid>\n                }\n                \n                <Grid item xs={12} sm={6}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <Controls.Buttons\n                            text=\"Submit\"\n                            type=\"submit\"\n                            />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                        <Controls.Buttons\n                            text=\"Reset\"\n                            variant=\"outlined\"\n                            onClick={resetForm} />\n                            </Grid>\n                    </Grid>\n                </Grid>\n          </Grid>\n        </Form>\n    )\n}\n","import React from 'react'\nimport Button  from '@mui/material/Button';\n\nimport {makeStyles} from \"@mui/styles\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minWidth: 0,\n        margin: theme.spacing(0.5)\n    },\n    secondary: {\n        backgroundColor: theme.palette.secondary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.secondary.main,\n        }\n    },\n    primary: {\n        backgroundColor: theme.palette.primary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.primary.main,\n        }\n    },\n}))\n\nexport default function ActionButton(props) {\n\n    const { color, children, onClick } = props;\n    const classes = useStyles();\n\n    return (\n        <Button\n            className={`${classes.root} ${classes[color]}`}\n            onClick={onClick}>\n            {children}\n        </Button>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@mui/material';\n\nconst Input = (props) => {\n    const {name,label,value,error=null,onChange,...other} = props;\n    return (\n        <TextField\n        fullWidth\n        \n        variant='outlined'\n        name={name}\n        value={value}\n        label={label}\n        onChange={onChange} \n        sx={{\n            \"& .MuiInputBase-root\": {\n                height: \"46px\"\n            }\n            }}\n            {...other} \n         {...(error && {error:true,helperText:error})}                     \n        />\n    )\n}\n\nexport default Input","import React from 'react'\nimport {RadioGroup as MuiRadioGroup,Radio, FormLabel,  FormControlLabel} from '@mui/material';\nconst RadioGroup = (props) => {\n    const { name, label, value, onChange, items } = props;\n  return (\n        <MuiRadioGroup\n    name={name}\n    value={value}\n    row\n    aria-labelledby=\"demo-row-radio-buttons-group-label\"\n    onChange={onChange}\n    >\n    <FormLabel id=\"demo-radio-buttons-group-label\" sx={{marginRight:\"10px\",fontSize:\"16px\",color:\"black\",paddingTop:\"8px\"}}>{label}  </FormLabel>\n    {\n   items.map(\n    item => (\n        <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\n    )\n)                 \n   }\n            \n     </MuiRadioGroup>\n  )\n}\n\nexport default RadioGroup","import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\n// import Checkbox from \"./Checkbox\";\nimport DatePicker from \"./DatePicker\";\nimport Buttons from \"./Buttons\";\nimport Checkbox from \"./Checkbox\"\nimport ActionButton from \"./ActionButton\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    // Checkbox,\n    DatePicker,\n    Buttons,\n    Checkbox,\n     ActionButton\n}\n\nexport default Controls;","import React from 'react'\nimport TextField from '@mui/material/TextField';\nimport moment from 'moment';\n\n\nexport default function DatePicker(props) {\n\n     const { name, label, value,onChange } = props\n    //  const newDate = moment(date.timeStamp).format('YYYY-MM-DD');\n\n   \n    return (\n       <TextField\n            fullWidth\n        name={name}\n        label={label}\n        InputLabelProps={{ shrink: true, required: true }}\n        type=\"date\"\n        value={value}\n        onChange={onChange}\n       \n        sx={{\n\n\n            \"& .MuiInputBase-root\": {\n                height: \"46px\"\n            }\n            }}\n      />\n    )\n}\n","import React from 'react'\n\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\n\n\nexport default function Buttons(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n    // const classes = useStyles();\n\n    return (\n        <Button \n        variant={variant || \"contained\"}\n        size={size || \"large\"}\n        color={color || \"primary\"}\n        onClick={onClick}\n        {...other}\n        >\n       {text}\n       </Button>\n    )\n}\n","import React from 'react'\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@mui/material';\n\nexport default function Checkbox(props) {\n\n    const { name, label, value, onChange } = props;\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <FormControl>\n            <FormControlLabel\n                control={<MuiCheckbox\n                    name={name}\n                    color=\"primary\"\n                    checked={value}\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\n                />}\n                label={label}\n            />\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport {makeStyles} from \"@mui/styles\"\nimport { Dialog, DialogTitle, DialogContent, Typography } from '@mui/material';\nimport ActionButton from './ActionButton'\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    dialogWrapper: {\n        padding: theme.spacing(2),\n        position: 'absolute',\n        top: theme.spacing(5)\n    },\n    dialogTitle: {\n        paddingRight: '0px'\n    }\n}))\n\nexport default function Popup(props) {\n\n    const { title, children, openPopup, setOpenPopup } = props;\n    const classes = useStyles();\n\n    return (\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\n            <DialogTitle className={classes.dialogTitle}>\n                <div style={{ display: 'flex' }}>\n                    <Typography variant=\"h3\" component=\"div\" style={{ flexGrow: 1 }}>\n                        {title}\n                    </Typography>\n                    <ActionButton\n                        color=\"secondary\"\n                        onClick={()=>{setOpenPopup(false)}}>\n                        <CloseIcon />\n                    </ActionButton>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers>\n                {children}\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport Grid from '@mui/material/Grid';\n\nconst Select = (props) => {\n    const { name, label, value,error=null, onChange, options } = props;\n  return (\n    <TextField\n    {...(error && {error:true,helperText:error})}\n          style={{ width: \"100%\" }}\n          variant=\"outlined\"\n          value={value}\n          onChange={onChange}\n          select\n          label={label}\n          name={name}\n          sx={{\n          \n\n            \"& .MuiInputBase-root\": {\n                height: \"46px\"\n            }\n            }}\n        >\n          <MenuItem  value=\"\">None</MenuItem>\n                {\n                    options.map(\n                        item => (<MenuItem key={item.id} value={item.id}>{item.price ? item.title+\" \"+item.price : item.title }</MenuItem>)\n                    )\n                }\n        </TextField>\n  )\n}\n\nexport default Select","// import { useEffect, useState } from \"react\"\nconst KEYS = {\n    appointmzzzzzzents: 'appointments',\n    appointmentId: 'appointmentId',\n    employees: 'employees',\n    employeeId: 'employeeId'\n}\n\nexport const getDoctorCollection = () => ([\n    { id: '1', title: 'Dr. Rakesh' },\n    { id: '2', title: 'Dr. Akshay' },\n    { id: '3', title: 'Dr. Snehal' },\n    { id: '4', title: 'Dr. Pooja' },\n])\n\nexport const meridiem = () => ([\n    { id: '1', title: 'AM' },\n    { id: '2', title: 'PM' },\n\n])\n\nexport const getTimeCollection = () => ([\n    { id: '10', title: '11:15 am' },\n    { id: '11', title: '11:30 am' },\n    { id: '12', title: '11:45 am' },\n    { id: '13', title: '12:00 pm' },\n    { id: '14', title: '12:15 pm' },\n    { id: '15', title: '12:30 pm' },\n    { id: '16', title: '12:45 pm' },\n    { id: '17', title: '1:00 pm' },\n    { id: '18', title: '1:15 pm' },\n    { id: '19', title: '1:30 pm' },\n    { id: '20', title: '1:45 pm' },\n    { id: '21', title: '2:00 pm' },\n    { id: '22', title: '2:15 pm' },\n\n])\n\nexport const getampm = () => ([\n    { id: '1', title: 'am' },\n    { id: '2', title: 'pm' }\n])\nexport const getServiceCollection = () => ([\n    { id: '1', title: 'Service 1', price: '₹ 500' },\n    { id: '2', title: 'Service 2', price: '₹ 400' },\n    { id: '3', title: 'Service 3', price: '₹ 750' },\n    { id: '4', title: 'Service 4', price: '₹ 800' },\n])\nexport const getDepartmentCollection = () => ([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    { id: '4', title: 'HR' },\n])\nexport function insertEmployee(data) {\n    let employees = getAllEmployees();\n    data['id'] = generateEmployeeId()\n    employees.push(data)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex(x => x.id == data.id);\n    employees[recordIndex] = { ...data }\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function deleteEmployee(id) {\n    let employees = getAllEmployees();\n    employees = employees.filter(x => x.id != id)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId() {\n    console.log(localStorage.getItem(KEYS.employeeId))\n    if (localStorage.getItem(KEYS.employeeId) == null) {\n        localStorage.setItem(KEYS.employeeId, '0')\n    }\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    //map departmentID to department title\n    let departments = getDepartmentCollection();\n    return employees.map(x => ({\n        ...x,\n    }))\n}","import other from 'menu-items/other';\nimport React,{useState} from 'react'\n\nexport const useForm = (initialFormValues,validateOnChange=false,validate) => {\n    const [values,setValues] = useState(initialFormValues);\n    const [errors,setErrors] = useState({});\n\n    const handleInputChange = e => {\n        const {name,value}= e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n        // if(validateOnChange )\n        // validate({[name] : value})\n\n    }\n    const handleSwitchChange = e => {\n        \n    }\n    const resetForm = () => {\n        setValues(initialFormValues);\n        setErrors({})\n    }\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    }\n}\n\n\n\n\n\nexport const Form = (props) => {\n\n  const {children,...other}  = props;\n  return (\n    <form autoComplete='off' {...other}>\n        {props.children}\n    </form>\n  )\n}\n","import { Table, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel } from '@mui/material'\nimport React from 'react'\nimport { useState } from 'react'\n\n\n\n\nconst useTable = (records, headCells, filterFn) => {\n\n\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [order, setOrder] = useState()\n    const [orderBy, setOrderBy] = useState()\n    const TbleContainer = props => (\n        <TableContainer sx={{ maxHeight: 700 }}>\n            <Table stickyHeader aria-label=\"sticky table\" sx={{\n                '& thead th': { backgroundColor: \"#ece6f5\", fontWeight: \"600\" }, '& tbody td': {\n                    fontWeight: '300',\n                },\n                '& tbody tr:hover': {\n                    backgroundColor: '#e3f2fd',\n                    cursor: 'pointer',\n                },\n            }}>\n                {props.children}\n            </Table>\n        </TableContainer>\n    )\n    const TblHead = props => {\n        const handleSortRequest = cellId => {\n            const isAsc = orderBy === cellId && order === \"asc\";\n            setOrder(isAsc ? 'desc' : 'asc');\n            setOrderBy(cellId)\n        }\n        return (\n            <TableHead>\n                <TableRow>\n                    {\n                        headCells.map(headCell => (\n                            <TableCell key={headCell.id} sortDirection={orderBy === headCell.id ? order : false} align='center' style={{ minWidth: headCell.minWidth }}>\n                                {headCell.disableSorting ? headCell.label :\n                                    <TableSortLabel\n                                        active={orderBy === headCell.id}\n                                        direction={orderBy === headCell.id ? order : 'asc'}\n                                        onClick={() => { handleSortRequest(headCell.id) }}>\n                                        {headCell.label.toUpperCase()}\n                                    </TableSortLabel>\n                                }</TableCell>\n                        ))\n                    }\n                </TableRow>\n            </TableHead>\n        )\n    }\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const TblPaging = () => (<TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        // count={records.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n    />)\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy)).slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n    }\n    return {\n        TbleContainer,\n        TblHead,\n        TblPaging,\n        recordsAfterPagingAndSorting\n    }\n}\n\nexport default useTable"],"names":["headCells","id","label","disableSorting","AvailableDisplay","recordForEdit","setRecordForEdit","useState","records","setRecords","employeeService","filterFn","setFilterFn","fn","items","openPopup","setOpenPopup","TbleContainer","TblHead","recordsAfterPagingAndSorting","TblPaging","useTable","text","variant","startIcon","onClick","map","item","ScheduleDate","starttime","endtime","color","fontSize","title","addOrEdit","employee","resetForm","initialFValues","AvailableForm","props","notavailable","setNotAvailable","isAv","setIsAv","values","setValues","errors","setErrors","handleInputChange","useForm","fieldValues","temp","Object","every","x","useEffect","onSubmit","e","preventDefault","console","log","container","spacing","xs","sm","name","value","onChange","control","checked","options","type","useStyles","makeStyles","theme","root","minWidth","margin","secondary","backgroundColor","palette","light","main","primary","ActionButton","children","classes","className","error","other","TextField","fullWidth","sx","height","helperText","row","FormLabel","marginRight","paddingTop","FormControlLabel","Radio","Input","RadioGroup","Select","DatePicker","InputLabelProps","shrink","required","Buttons","size","Button","Checkbox","FormControl","target","convertToDefEventPara","dialogWrapper","padding","position","top","dialogTitle","paddingRight","Popup","open","maxWidth","paper","style","display","component","flexGrow","dividers","width","select","price","KEYS","getDoctorCollection","getTimeCollection","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","updateEmployee","recordIndex","findIndex","deleteEmployee","filter","parse","initialFormValues","Form","autoComplete","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","maxHeight","stickyHeader","fontWeight","cursor","headCell","sortDirection","align","active","direction","cellId","toUpperCase","rowsPerPageOptions","onPageChange","onRowsPerPageChange","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice"],"sourceRoot":""}